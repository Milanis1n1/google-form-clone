{"mappings":"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","sources":["dist/js/app.js"],"sourcesContent":["\"use strict\";\n// Select DOM elements\nconst fieldsContainer = document.getElementById(\"fields-container\");\nconst addFieldButton = document.getElementById(\"add-field\");\nconst saveFormButton = document.getElementById(\"save-form\");\nconst savedFormsList = document.getElementById(\"saved-forms\");\nconst formPreviewSection = document.getElementById(\"form-preview\");\nconst previewContainer = document.getElementById(\"preview-container\");\nconst backToBuilderButton = document.getElementById(\"back-to-builder\");\n// DOM Elements for Responses\nconst formResponseSection = document.getElementById(\"form-responses\");\nconst responseContainer = document.getElementById(\"response-container\");\n// Centralized storage for current form responses\nlet currentFormResponse = {};\n// Store forms in localStorage\nconst localStorageKey = \"forms\";\nconst getFormsFromStorage = () => JSON.parse(localStorage.getItem(localStorageKey) || \"[]\");\nconst saveFormsToStorage = (forms) => localStorage.setItem(localStorageKey, JSON.stringify(forms));\n// Get and Save Responses from Storage\nconst localStorageResponseKey = \"formResponses\";\nconst getResponsesFromStorage = () => JSON.parse(localStorage.getItem(localStorageResponseKey) || \"[]\");\nconst saveResponsesToStorage = (responses) => localStorage.setItem(localStorageResponseKey, JSON.stringify(responses));\n// Generate unique IDs\nconst generateId = () => \"_\" + Math.random().toString(36).substr(2, 9);\n// Current form data\nlet currentFields = [];\nlet editingFormId = null; // Track the form being edited\n// Add a new field\nconst addField = () => {\n    const fieldId = generateId();\n    const field = {\n        id: fieldId,\n        type: \"text\", // Default to text input\n        label: \"\",\n    };\n    currentFields.push(field);\n    renderFields();\n};\n// Render fields in the builder\nconst renderFields = () => {\n    fieldsContainer.innerHTML = \"\";\n    currentFields.forEach((field) => {\n        const fieldElement = document.createElement(\"div\");\n        fieldElement.className = \"field\";\n        fieldElement.innerHTML = `\r\n        <input type=\"text\" placeholder=\"Label\" value=\"${field.label}\" data-id=\"${field.id}\" class=\"field-label\">\r\n        <select data-id=\"${field.id}\" class=\"field-type\">\r\n          <option value=\"text\" ${field.type === \"text\" ? \"selected\" : \"\"}>Text</option>\r\n          <option value=\"checkbox\" ${field.type === \"checkbox\" ? \"selected\" : \"\"}>Multiple Choice</option>\r\n          <option value=\"checkbox\" ${field.type === \"checkbox\" ? \"selected\" : \"\"}>Checkbox</option>\r\n          <option value=\"dropdown\" ${field.type === \"dropdown\" ? \"selected\" : \"\"}>Dropdown</option>\r\n          <option value=\"radio\" ${field.type === \"radio\" ? \"selected\" : \"\"}>Single Selection</option>\r\n          <option value=\"date\" ${field.type === \"date\" ? \"selected\" : \"\"}>Date</option>\r\n        </select>\r\n        <button data-id=\"${field.id}\" class=\"delete-field\">Delete</button>\r\n        <div class=\"field-options\" data-id=\"${field.id}\" style=\"display: none;\">\r\n          <input type=\"text\" placeholder=\"Add option\" class=\"add-option\" data-id=\"${field.id}\" />\r\n          <button class=\"add-option-btn\" data-id=\"${field.id}\">Add Option</button>\r\n          <ul class=\"options-list\" data-id=\"${field.id}\"></ul>\r\n        </div>\r\n        <div class=\"field-validation\">\r\n          <label>Required:</label>\r\n          <input type=\"checkbox\" ${field.required ? \"checked\" : \"\"} data-id=\"${field.id}\" class=\"required-check\" />\r\n        </div>\r\n        <div class=\"options-container\" data-id=\"${field.id}\"></div>`;\n        fieldsContainer.appendChild(fieldElement);\n        // Render options for radio/checkbox fields\n        renderOptions(field);\n        // Attach event listeners for label, type, and delete actions\n        const labelInputs = document.querySelectorAll(\".field-label\");\n        labelInputs.forEach((input) => input.addEventListener(\"input\", (e) => updateFieldLabel(e.target.dataset.id, e.target.value)));\n        const typeSelects = document.querySelectorAll(\".field-type\");\n        typeSelects.forEach((select) => select.addEventListener(\"change\", (e) => updateFieldType(e.target.dataset.id, e.target.value)));\n        const deleteButtons = document.querySelectorAll(\".delete-field\");\n        deleteButtons.forEach((button) => button.addEventListener(\"click\", (e) => deleteField(e.target.dataset.id)));\n        const requiredCheck = document.querySelectorAll(\".required-check\");\n        requiredCheck.forEach((checkbox) => checkbox.addEventListener(\"change\", (e) => toggleFieldRequired(e.target.dataset.id, e.target.checked)));\n        const optionInputs = document.querySelectorAll(\".add-option\");\n        optionInputs.forEach((input) => input.addEventListener(\"input\", (e) => updateFieldOptions(e.target.dataset.id, e.target.value)));\n        const addOptionBtns = document.querySelectorAll(\".add-option-btn\");\n        addOptionBtns.forEach((button) => button.addEventListener(\"click\", (e) => addOptionToField(e.target.dataset.id)));\n    });\n};\n// Render options for radio and checkbox fields\nconst renderOptions = (field) => {\n    const optionsContainer = document.querySelector(`.options-container[data-id=\"${field.id}\"]`);\n    if (field.type === \"radio\" ||\n        field.type === \"checkbox\" ||\n        field.type === \"dropdown\") {\n        optionsContainer.innerHTML = \"\"; // Clear previous options\n        if (field.options) {\n            field.options.forEach((option, index) => {\n                const optionElement = document.createElement(\"div\");\n                optionElement.className = \"option\";\n                optionElement.innerHTML = `\r\n            <input type=\"text\" value=\"${option}\" data-id=\"${field.id}\" data-index=\"${index}\" class=\"option-input\">\r\n            <button data-id=\"${field.id}\" data-index=\"${index}\" class=\"delete-option\">Delete</button>\r\n          `;\n                optionsContainer.appendChild(optionElement);\n            });\n        }\n        // Add \"Add Option\" button\n        const addOptionButton = document.createElement(\"button\");\n        addOptionButton.textContent = \"Add Option\";\n        addOptionButton.addEventListener(\"click\", () => addOption(field.id));\n        optionsContainer.appendChild(addOptionButton);\n        // Attach event listeners for option inputs and delete buttons\n        const optionInputs = document.querySelectorAll(`.option-input[data-id=\"${field.id}\"]`);\n        optionInputs.forEach((input) => input.addEventListener(\"input\", (e) => updateOptionLabel(field.id, e.target.dataset.index, e.target.value)));\n        const deleteOptionButtons = document.querySelectorAll(`.delete-option[data-id=\"${field.id}\"]`);\n        deleteOptionButtons.forEach((button) => button.addEventListener(\"click\", (e) => deleteOption(field.id, e.target.dataset.index)));\n    }\n};\n// Delete an option\nconst deleteOption = (fieldId, index) => {\n    const field = currentFields.find((field) => field.id === fieldId);\n    if (field && (field.type === \"radio\" || field.type === \"checkbox\")) {\n        const optionIndex = parseInt(index, 10);\n        if (field.options && field.options[optionIndex] !== undefined) {\n            field.options.splice(optionIndex, 1); // Remove the option\n            renderFields();\n        }\n    }\n};\n// Add option for radio/checkbox fields\nconst addOption = (fieldId) => {\n    const field = currentFields.find((field) => field.id === fieldId);\n    if (field &&\n        (field.type === \"radio\" ||\n            field.type === \"checkbox\" ||\n            field.type === \"dropdown\")) {\n        field.options = field.options || [];\n        field.options.push(\"\"); // Add an empty option\n        renderFields();\n    }\n};\n// Update option label\nconst updateOptionLabel = (fieldId, index, label) => {\n    const field = currentFields.find((field) => field.id === fieldId);\n    if (field &&\n        (field.type === \"radio\" ||\n            field.type === \"checkbox\" ||\n            field.type === \"dropdown\")) {\n        const optionIndex = parseInt(index, 10);\n        if (field.options && field.options[optionIndex] !== undefined) {\n            field.options[optionIndex] = label;\n        }\n    }\n};\n// Update field label\nconst updateFieldLabel = (id, label) => {\n    const field = currentFields.find((field) => field.id === id);\n    if (field)\n        field.label = label;\n};\n// Update field type\nconst updateFieldType = (id, type) => {\n    const field = currentFields.find((field) => field.id === id);\n    if (field) {\n        field.type = type;\n        renderFields(); // Re-render fields to show options only for applicable types\n    }\n};\n// Toggle field required state\nconst toggleFieldRequired = (id, required) => {\n    const field = currentFields.find((field) => field.id === id);\n    if (field)\n        field.required = required;\n};\n// Update field options (for dropdown, radio, checkbox, radio)\nconst updateFieldOptions = (id, value) => {\n    const field = currentFields.find((field) => field.id === id);\n    if (field) {\n        if (!field.options)\n            field.options = [];\n        field.options[0] = value; // Update the first option temporarily for now\n    }\n};\n// Add option to field (for radio, checkbox, dropdown, and radio)\nconst addOptionToField = (id) => {\n    const field = currentFields.find((field) => field.id === id);\n    const optionInput = document.querySelector(`.add-option[data-id=\"${id}\"]`);\n    const optionValue = optionInput.value.trim();\n    if (field && optionValue) {\n        if (!field.options)\n            field.options = [];\n        field.options.push(optionValue);\n        optionInput.value = \"\"; // Clear input\n        renderFields(); // Re-render to update options\n    }\n};\n// Delete a field\nconst deleteField = (id) => {\n    currentFields = currentFields.filter((field) => field.id !== id);\n    renderFields();\n};\n// Save form\nconst saveForm = () => {\n    if (editingFormId) {\n        const forms = getFormsFromStorage();\n        const formIndex = forms.findIndex((form) => form.id === editingFormId);\n        if (formIndex !== -1) {\n            forms[formIndex].fields = currentFields; // Update the fields of the form\n            saveFormsToStorage(forms);\n            alert(\"Form updated!\");\n        }\n    }\n    else {\n        const formName = prompt(\"Enter a name for this form:\");\n        if (!formName)\n            return;\n        const newForm = {\n            id: generateId(),\n            name: formName,\n            fields: currentFields,\n        };\n        const forms = getFormsFromStorage();\n        forms.push(newForm);\n        saveFormsToStorage(forms);\n        alert(\"Form saved!\");\n    }\n    renderSavedForms();\n    currentFields = [];\n    editingFormId = null; // Reset editing form\n    renderFields();\n};\n// Render saved forms\nconst renderSavedForms = () => {\n    savedFormsList.innerHTML = \"\";\n    const forms = getFormsFromStorage();\n    forms.forEach((form) => {\n        const formElement = document.createElement(\"li\");\n        formElement.innerHTML = `\r\n        <span>${form.name}</span>\r\n        <div>\r\n          <button data-id=\"${form.id}\" class=\"preview-form\">Preview</button>\r\n          <button data-id=\"${form.id}\" class=\"edit-form\">Edit</button>\r\n          <button data-id=\"${form.id}\" class=\"delete-form\">Delete</button>\r\n          <button data-id=\"${form.id}\" class=\"submit-form-response\">Submit Response</button>\r\n          <button data-id=\"${form.id}\" class=\"view-response\">View Response</button>\r\n        </div>\r\n      `;\n        savedFormsList.appendChild(formElement);\n    });\n    // Attach event listeners for preview and delete actions\n    const previewButtons = document.querySelectorAll(\".preview-form\");\n    previewButtons.forEach((button) => button.addEventListener(\"click\", (e) => previewForm(e.target.dataset.id)));\n    const deleteButtons = document.querySelectorAll(\".delete-form\");\n    deleteButtons.forEach((button) => {\n        button.addEventListener(\"click\", (e) => deleteForm(e.target.dataset.id));\n    });\n    const editButtons = document.querySelectorAll(\".edit-form\");\n    editButtons.forEach((button) => button.addEventListener(\"click\", (e) => editForm(e.target.dataset.id)));\n    const submitResponseButtons = document.querySelectorAll(\".submit-form-response\");\n    submitResponseButtons.forEach((button) => button.addEventListener(\"click\", (e) => renderFormForSubmission(e.target.dataset.id)));\n    // Attach event listeners\n    const viewButtons = document.querySelectorAll(\".view-response\");\n    viewButtons.forEach((button) => button.addEventListener(\"click\", (e) => viewResponses(e.target.dataset.id)));\n};\n// Preview a form\nconst previewForm = (id) => {\n    const forms = getFormsFromStorage();\n    const form = forms.find((form) => form.id === id);\n    if (!form)\n        return;\n    previewContainer.innerHTML = \"\";\n    form.fields.forEach((field) => {\n        var _a, _b, _c;\n        const fieldElement = document.createElement(\"div\");\n        fieldElement.className = \"field-preview\";\n        fieldElement.innerHTML = `<label>${field.label} ${field.required ? '<span style=\"color: red;\">*</span>' : \"\"} : </label>`;\n        if (field.type === \"text\") {\n            fieldElement.innerHTML += `<input type=\"text\" disabled>`;\n        }\n        else if (field.type === \"radio\" || field.type === \"checkbox\") {\n            (_a = field.options) === null || _a === void 0 ? void 0 : _a.forEach((option) => {\n                fieldElement.innerHTML += `<input type=\"${field.type}\" disabled> ${option}`;\n            });\n        }\n        else if (field.type === \"dropdown\") {\n            fieldElement.innerHTML += `<select disabled>`;\n            (_b = field.options) === null || _b === void 0 ? void 0 : _b.forEach((option) => {\n                fieldElement.innerHTML += `<option>${option}</option>`;\n            });\n            fieldElement.innerHTML += `</select>`;\n        }\n        else if (field.type === \"radio\") {\n            (_c = field.options) === null || _c === void 0 ? void 0 : _c.forEach((option) => {\n                fieldElement.innerHTML += `<input type=\"radio\" disabled> ${option}`;\n            });\n        }\n        else if (field.type === \"date\") {\n            fieldElement.innerHTML += `<input type=\"date\" disabled>`;\n        }\n        previewContainer.appendChild(fieldElement);\n    });\n    formPreviewSection.style.display = \"block\";\n};\n// Delete a form\nconst deleteForm = (id) => {\n    let forms = getFormsFromStorage();\n    forms = forms.filter((form) => form.id !== id);\n    saveFormsToStorage(forms);\n    renderSavedForms();\n};\n// Back to form builder\nconst backToFormBuilder = () => {\n    formPreviewSection.style.display = \"none\";\n};\n// Edit form\nconst editForm = (id) => {\n    const forms = getFormsFromStorage();\n    const form = forms.find((form) => form.id === id);\n    if (form) {\n        editingFormId = id; // Set form as being edited\n        currentFields = [...form.fields]; // Load fields into the builder\n        renderFields();\n    }\n};\n// Event Listeners\naddFieldButton.addEventListener(\"click\", addField);\nsaveFormButton.addEventListener(\"click\", saveForm);\nbackToBuilderButton.addEventListener(\"click\", backToFormBuilder);\n// Initial Render\nrenderSavedForms();\n// Add change event listener to update responses dynamically\nconst handleInputChange = (event) => {\n    const target = event.target;\n    if (!target)\n        return;\n    if (target.type === \"checkbox\") {\n        const fieldId = target.name; // Group by name for checkboxes\n        if (!Array.isArray(currentFormResponse[fieldId])) {\n            currentFormResponse[fieldId] = [];\n        }\n        const values = currentFormResponse[fieldId];\n        if (target.checked) {\n            values.push(target.value);\n        }\n        else {\n            currentFormResponse[fieldId] = values.filter((v) => v !== target.value);\n        }\n    }\n    else if (target.type === \"radio\") {\n        currentFormResponse[target.name] = target.value; // Use name for radio groups\n    }\n    else {\n        currentFormResponse[target.id] = target.value; // Use ID for text and dropdown\n    }\n};\n// Render Form for Submission\nconst renderFormForSubmission = (id) => {\n    const forms = getFormsFromStorage();\n    const form = forms.find((form) => form.id === id);\n    previewContainer.innerHTML = \"\";\n    const formElement = document.createElement(\"form\");\n    formElement.id = \"dynamic-form\";\n    if (form) {\n        form.fields.forEach((field) => {\n            var _a, _b, _c;\n            const fieldWrapper = document.createElement(\"div\");\n            fieldWrapper.className = \"field\";\n            // Create field label\n            const label = document.createElement(\"label\");\n            label.textContent = field.label;\n            fieldWrapper.appendChild(label);\n            // Create field based on type\n            let inputElement;\n            if (field.type === \"text\") {\n                inputElement = document.createElement(\"input\");\n                inputElement.type = \"text\";\n                inputElement.addEventListener(\"input\", handleInputChange);\n            }\n            else if (field.type === \"checkbox\") {\n                inputElement = document.createElement(\"div\");\n                (_a = field.options) === null || _a === void 0 ? void 0 : _a.forEach((option) => {\n                    const optionWrapper = document.createElement(\"div\");\n                    const input = document.createElement(\"input\");\n                    input.type = \"checkbox\";\n                    input.name = field.id; // Group by field ID\n                    input.value = option;\n                    input.addEventListener(\"change\", handleInputChange);\n                    const optionLabel = document.createElement(\"label\");\n                    optionLabel.textContent = option;\n                    optionWrapper.appendChild(input);\n                    optionWrapper.appendChild(optionLabel);\n                    inputElement.appendChild(optionWrapper);\n                });\n            }\n            else if (field.type === \"radio\") {\n                inputElement = document.createElement(\"div\");\n                (_b = field.options) === null || _b === void 0 ? void 0 : _b.forEach((option) => {\n                    const optionWrapper = document.createElement(\"div\");\n                    const input = document.createElement(\"input\");\n                    input.type = \"radio\";\n                    input.name = field.id; // Group by field ID\n                    input.value = option;\n                    input.addEventListener(\"change\", handleInputChange);\n                    const optionLabel = document.createElement(\"label\");\n                    optionLabel.textContent = option;\n                    optionWrapper.appendChild(input);\n                    optionWrapper.appendChild(optionLabel);\n                    inputElement.appendChild(optionWrapper);\n                });\n            }\n            else if (field.type === \"dropdown\") {\n                inputElement = document.createElement(\"select\");\n                inputElement.id = field.id;\n                (_c = field.options) === null || _c === void 0 ? void 0 : _c.forEach((option) => {\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.value = option;\n                    optionElement.textContent = option;\n                    inputElement.appendChild(optionElement);\n                });\n                inputElement.addEventListener(\"change\", handleInputChange);\n            }\n            else if (field.type === \"date\") {\n                inputElement = document.createElement(\"input\");\n                inputElement.type = \"date\";\n                inputElement.addEventListener(\"input\", handleInputChange);\n            }\n            else {\n                inputElement = document.createElement(\"input\");\n                inputElement.type = \"text\";\n                inputElement.addEventListener(\"input\", handleInputChange);\n            }\n            inputElement.id = field.id;\n            inputElement.className = \"form-input\";\n            if (field.type === \"checkbox\" || field.type === \"radio\") {\n                inputElement.className = \"checkbox\";\n            }\n            fieldWrapper.appendChild(inputElement);\n            formElement.appendChild(fieldWrapper);\n        });\n        // Submit Button\n        const submitButton = document.createElement(\"button\");\n        submitButton.textContent = \"Submit\";\n        submitButton.type = \"button\";\n        submitButton.addEventListener(\"click\", () => submitFormResponse(form.id));\n        formElement.appendChild(submitButton);\n    }\n    previewContainer.appendChild(formElement);\n    formPreviewSection.style.display = \"block\";\n};\n// Submit Form Response\nconst submitFormResponse = (formId) => {\n    const responses = getResponsesFromStorage();\n    responses.push({ formId, responses: currentFormResponse });\n    saveResponsesToStorage(responses);\n    alert(\"Form submitted successfully!\");\n    backToFormBuilder();\n};\n// Render Submitted Responses\nconst renderResponses = () => {\n    responseContainer.innerHTML = \"\";\n    const responses = getResponsesFromStorage();\n    const forms = getFormsFromStorage();\n    if (responses.length === 0) {\n        alert(\"No responses found for this form.\");\n        return;\n    }\n    responseContainer.innerHTML = `<h3>Responses</h3>`;\n    responses.forEach((response, index) => {\n        const form = forms.find((f) => f.id === response.formId);\n        if (!form)\n            return;\n        const responseElement = document.createElement(\"div\");\n        responseElement.className = \"response\";\n        const title = document.createElement(\"h3\");\n        title.textContent = `Responses for Form: ${form.name}`;\n        responseElement.appendChild(title);\n        Object.keys(response.responses).forEach((fieldId) => {\n            const value = response.responses[fieldId];\n            const field = form.fields.find((f) => f.id === fieldId);\n            if (!field)\n                return;\n            const responseRow = document.createElement(\"div\");\n            responseRow.className = \"response-row\";\n            responseRow.innerHTML = `<strong>${field.label}:</strong> ${value}`;\n            responseElement.appendChild(responseRow);\n        });\n        responseContainer.appendChild(responseElement);\n    });\n};\n// View responses for a form\nconst viewResponses = (formId) => {\n    const allResponses = getResponsesFromStorage();\n    const forms = getFormsFromStorage();\n    const responses = allResponses.filter((response) => response.formId === formId);\n    const form = forms.find((f) => f.id === formId);\n    if (!form)\n        return;\n    if (responses.length === 0) {\n        alert(\"No responses found for this form.\");\n        return;\n    }\n    previewContainer.innerHTML = `<h3>Responses</h3>`;\n    responses.forEach((response, index) => {\n        const responseDiv = document.createElement(\"div\");\n        responseDiv.className = \"response\";\n        const responseHeader = document.createElement(\"h4\");\n        responseHeader.textContent = `Response ${index + 1}`;\n        responseDiv.appendChild(responseHeader);\n        Object.keys(response.responses).forEach((fieldId) => {\n            const fieldDiv = document.createElement(\"div\");\n            const answer = response.responses[fieldId];\n            const field = form.fields.find((f) => f.id === fieldId);\n            if (!field)\n                return;\n            fieldDiv.textContent = `${field.label}: ${Array.isArray(answer) ? answer.join(\", \") : answer}`;\n            responseDiv.appendChild(fieldDiv);\n        });\n        previewContainer.appendChild(responseDiv);\n    });\n    formPreviewSection.style.display = \"block\";\n};\n"],"names":[],"version":3,"file":"app.js.map"}